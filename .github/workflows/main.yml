name: Deploy to S3 on Tag

on:
  push:
    branches: 
      - 'test-workflow'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
      - '[0-9]+.[0-9]+.[0-9]+*'
      - 'v[0-9]+.[0-9]+.[0-9]+-(CR|Beta|milestone)[0-9]*'
      - '[0-9]+.[0-9]+.[0-9]+-(CR|Beta|milestone)[0-9]*'


permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  S3PackageUpload:
    runs-on: ubuntu-latest
    env:
      IS_TEST: ${{ github.ref == 'refs/heads/test-workflow' }}
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: Determine Ref Type (Branch or Tag)
        id: ref-check
        run: |
          if [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
          fi
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::992382682634:role/ansible-playbook-workflow-role
          #role-session-name: samplerolesession
          aws-region: il-central-1
      
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
      
      - name: Set Variables
        id: vars
        run: |
          TAG_NAME=${GITHUB_REF##*/}
          REPO_NAME=${GITHUB_REPOSITORY##*/}
          S3_BASE_PATH="s3://bootstrap-opinion-stg/playbooks"
          S3_PATH="${S3_BASE_PATH}/${REPO_NAME}/${TAG_NAME}"
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          echo "REPO_NAME=${REPO_NAME}" >> $GITHUB_ENV
          echo "S3_PATH=${S3_PATH}" >> $GITHUB_ENV
      
      - name: Delete existing files from S3
        run: |
          aws s3 rm ${{ env.S3_PATH }}/ --recursive
      
      - name: Copy to S3
        run: |
          aws s3 cp . ${{ env.S3_PATH }}/ --recursive --exclude ".*" --exclude ".*/**" --exclude "Vagrantfile*"

      - name: Install Packer
        run: |
          sudo apt-get install -y packer

      - name: Execute Packer Build
        if: env.TAG_NAME
        run: |
          packer build -var "tag=${TAG_NAME}" .